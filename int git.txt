INTRODUCTION TO GIT AND GITHUB


GIT : Git is a distributed version control system used in software development that monitors source code changes. It facilitates developer collaboration by enabling them to work on projects concurrently and keep track of modification history.

GITHUB : Built on top of Git, GitHub is an online platform that hosts version-controlled repositories. It is a popular platform for both commercial and open-source development projects because it makes teamwork, code review, and project management easier.


GitHub

Basic Terms

Repository  : The data and version history for your project are kept in a repository, which is a directory or storage area. Both remote  
repositories on servers and local repositories on your computer exist.

Working directory  : The directory that you are presently working in on your local computer is known as the working directory. It includes the files that you are currently working on and updating.

Commit : A commit is a snapshot of the changes you've made to your files. It includes a unique identifier (hash) and a commit message describing the changes made.
Branch :  A branch is a repository's parallel version. Working on a feature or bug repair without impacting the main codebase is made possible by it. Branches are helpful for both cooperation and seclusion.

Master/Main Branch: Typically, "master" or "main" is the name of the default branch in Git. This branch, which is regarded as stable, contains the official project history.

Clone: The process of copying a remote repository to your local computer is called cloning. When beginning to work on an already-existing project, this is frequently the first step.

Pull :  Pull is a combination of fetching changes and automatically merging them into your local branch. It is a convenient way to update your local branch with changes from the remote repository.

Push: Push is the process of sending your committed changes to a remote repository. It updates the remote repository with your local commits.

Merge : Merging combines changes from different branches. It is used to integrate the changes made in one branch into another.

Conflict : A conflict occurs when Git is unable to automatically merge changes due to conflicting edits in the same part of a file. Resolving conflicts requires manual intervention.

Pull Request (PR) : In Git-based workflows like GitHub, a pull request is a way to propose changes to a repository. It includes the changes made in a branch and requests that they be reviewed and merged into another branch.

Fork : Forking is the process of creating a personal copy of someone else's project. This allows you to make changes in your fork without affecting the original repository.

Watch : Show the Github users who have asked to be notified of activity in a repository, but have not become collaborators.



Basic Git Commands

git init : Initializes a new Git repository.
git clone <repository_url>: Creates a local copy of a remote repository.
git add <file_name>: Adds changes to the staging area.
git commit -m "Commit message": Records changes in the staging area with a commit message.
git status : Shows the status of changes in the working directory.
git pull : Fetches and merges changes from a remote repository.
git push : Uploads local commits to a remote repository.
git branch : Lists all branches in the repository.
git checkout <branch_name or commit_hash> : Switches between branches or restores files from a specific commit.
git merge <branch_name> : Combines changes from one branch into another.
git log :Displays a log of all commits.
git remote -v :Shows a list of remote repositories.

GitHub,GitLab,Bitbucket
GitHub,GitLab,Bitbucket are all web-based platforms that provide version control and collaboration features for software development using Git.

GitHub
-Largest open source code repository.
-One of the most important software development platform.
-Offers both public and private repositories.
-Fastest platform to make and share documents
GitLab.
-Comparatively smaller community.
-GitLab provides a single interface to the whole DevOps cycle.
Bitbucket
-Suitable for small to medium sized teams.
-Not an open source.
-Help them manage their projects, including version control, source control, code review, task management and more

Industrial practices of using Git
-Version control
-Collaborative development
-Code reviews
-Access control and permissions.

Cloning a repo to local
git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY

Resources used : 
1.https://youtu.be/8JJ101D3knE?si=LVRqer8_ekPW9u2n
2.https://dev.to/milu_franz/git-explained-the-basics-igc
3.ChatGPT
